---
format: gfm
---

<!-- README.md is generated from README.Qmd. Please edit that file -->

```{r, include = FALSE}
knitr::opts_chunk$set(
  collapse = TRUE,
  comment = "#>"
)
```

# Spatiotemporal patterns in phenology in the Northeastern USA

<!-- badges: start -->

[![Project Status: Active -- The project has reached a stable, usable state and is being actively developed.](https://www.repostatus.org/badges/latest/active.svg)](https://www.repostatus.org/#active)

<!-- badges: end -->

The goal of this project is to estimate spatial and temporal patterns in phenology in the [Northeast CASC](https://www.usgs.gov/programs/climate-adaptation-science-centers/northeast-casc) member states using [PRISM](https://prism.oregonstate.edu/) temperature data.
This workflow downloads daily data, calculates growing degree days (GDD) for each day, and then finds the day of year (DOY) that certain threshold GDD are reached for this region.
Products include rasters of mean and standard deviation of DOY for a variety of GDD thresholds over the normals period (1991-2020), and rasters of rates of change in DOY for these thresholds estimated by simple pixel-wise linear regression.
For continuing work on estimating spatiotemporal trends with more sophisticated statistical methods, see https://github.com/cct-datascience/thermal-trends

## Reproducibility

### `renv`

This project uses [`renv`](https://rstudio.github.io/renv/articles/renv.html) for package management.
When opening this repo as an RStudio Project for the first time, `renv` should automatically install itself and prompt you to run `renv::restore()` to install all package dependencies.
If this gets frustrating, and you'd rather just install the latest versions of required packages yourself, you can run `renv::deactivate()` to remove the `renv` infrastructure---there are no guarantees the workflow will run with different versions of R package dependencies.

### `targets`

This project uses the [`targets` package](https://docs.ropensci.org/targets/) for workflow management.
Run `targets::tar_make()` from the console to run the workflow and reproduce all results.
The graph below shows the workflow:

```{r}
#| echo: false
#| message: false
#| warning: false
#| results: asis
cat(
  "```mermaid",
  targets::tar_mermaid(targets_only = TRUE, reporter = "silent"),
  "```",
  sep = "\n"
)
#this should display correctly on GitHub, or code can be pasted into https://mermaid.live
```

------------------------------------------------------------------------

Developed in collaboration with the University of Arizona [CCT Data Science](https://datascience.cct.arizona.edu/) group.
